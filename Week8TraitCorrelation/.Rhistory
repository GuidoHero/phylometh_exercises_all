rate.mat.ard.NoOneLoss
rate.mat.ard.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 to 1 transition to NA
rate.mat.ard.NoOneLoss
rate.mat.ard.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.er, drop.par=1) # Set 2 (1) to 1(0) transition to NA
rate.mat.ard.NoOneLoss <
rate.mat.ard.NoOneLoss
rate.mat.ard.NoOneLoss
rate.mat.ard.NoOneLoss
rate.mat.er
rate.mat.ard.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
rate.mat.ard.NoOneLoss
pp.ard.NoOneLoss <- corHMM:::corHMM(primates$tree,primates$trait[,c(1,2)],rate.cat=1,rate.mat=rate.mat.ard.NoOneLoss, node.states="marginal")
rate.mat.ard.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
pp.ard.NoOneLoss <- corHMM:::corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1,rate.mat=rate.mat.ard.NoOneLoss, node.states="marginal")
pp.ard.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1,rate.mat=rate.mat.ard.NoOneLoss, node.states="marginal")
rate.mat.ard.NoOneLoss
pp.ard.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.ard.NoOneLoss, node.states="marginal")
pp.ard.NoOneLoss
rate.mat.ard.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=2) # Set 2 (1) to 1(0) transition to NA
pp.ard.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.ard.NoOneLoss, node.states="marginal")
print(rate.mat.ard.4state)
rate.mat.ard.4state
print(rate.mat.ard.4state)
print(rayDISC(primates$tree, fourstate.data, ntraits=1, model="ER", node.states="marginal"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat=rate.mat.er.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ARD")
print(rate.mat.ard.4state)
corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(3,5,8,10))
rate.mat.ard.4state
print(rate.mat.ard.4state)
rate.mat.er.4state <-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ER")
print(rate.mat.er.4state)
fourstate.trait<-rep(NA,Ntip(primates$tree))
for(i in sequence(Ntip(primates$tree))) {
if(primates$trait[i,2]==0 && primates$trait[i,3]==0) {
fourstate.trait[i]<-0
}
if(primates$trait[i,2]==0 && primates$trait[i,3]==1) {
fourstate.trait[i]<-1
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==0) {
fourstate.trait[i]<-2
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==1) {
fourstate.trait[i]<-3
}
}
fourstate.data<-data.frame(Genus_sp=primates$trait[,1], T1=fourstate.trait)
print(rayDISC(primates$tree, fourstate.data, ntraits=1, model="ER", node.states="marginal"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat=rate.mat.er.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ARD")
print(rate.mat.ard.4state)
rate.mat.gtr.4state<-rate.mat.ard.4state
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(1,4))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(2,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(3,8))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(4,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(5,7))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(6,7))
print(rate.mat.gtr.4state)
fourstate.trait
fourstate.data<
fourstate.data
print(rayDISC(primates$tree, fourstate.data, ntraits=1, model="ER", node.states="marginal"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat=rate.mat.er.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ARD")
print(rate.mat.ard.4state)
plotMKmodel(rate.mat.ard.4state)
rate.mat.ard.NoOneLoss
imates$tree,primates$trait[,c(1,2)]
imates$tree,primates$trait[,c(1,2)]
primates$tree,primates$trait[,c(1,2)]
primates$tree,primates$trait[,c(1,2)]
primates$tree,primates$trait[,c(1,2)]
primates$tree,primates$trait[,c(1,2)]
pp.ard<-corHMM:::corHMM(primates$tree,primates$trait[,c(1,2)],rate.cat=1,rate.mat=rate.mat.ard, node.states="marginal")
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
getStateMat4Dat(rate.mat.ard.4state)
rate.mat.ard.4state
rate.mat.pag94
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=3)
rate.mat.ard.OnlyVia01
rate.mat.ard.4state
rate.mat.ard.4state
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.gtr.4state, node.states="marginal", model="ARD"))
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
print(rate.mat.gtr.4state)
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.gtr.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state
rate.mat.pag94 <- corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(3,5,8,10))
rate.mat.pag94
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(3,5,8,10))
rate.mat.ard.OnlyVia01
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(5))
rate.mat.ard.OnlyVia01
rate.mat.pag94
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.pag94, drop.par=c(5))
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.pag94, drop.par=5)
rate.mat.ard.OnlyVia01
rate.mat.gtr.4state
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.gtr.4state, drop.par=2)
rate.mat.ard.OnlyVia01
rate.mat.gtr.4state
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.gtr.4state, drop.par=c(2,3))
rate.mat.ard.OnlyVia01
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
rate.mat.ard.OnlyVia0
rate.mat.ard.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.gtr.4state, drop.par=c(2,3))
rint(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.OnlyVia01, node.states="marginal", model="ARD"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.OnlyVia01, node.states="marginal", model="ARD"))
pp.All<- corHMM(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.All<- corHMM(primates$tree, fourstate.data, ntraits=2, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.All<- corHMM(primates$tree, fourstate.data, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.All<- rayDISC(primates$tree, fourstate.data, ntraits=2, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.All
pp.All<- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.All<- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.pag94 <- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.pag94, node.states="marginal", model="ARD")
pp.Onlyvia01 <- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.OnlyVia01, node.states="marginal", model="ARD")
print(AIC)
print(pp.All$AIC)
print(pp.pag94$AIC)
print(pp.Onlyvia01$AIC)
rate.mat.pag94
rate.mat.ard.pag94.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.pag94, drop.par=c(5))
rate.mat.ard.All.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.gtr.4state, drop.par=c(2,3))
rate.mat.ard.pag94.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.pag94, drop.par=c(5))
rate.mat.ard.All.OnlyVia01 <-corHMM:::rate.par.drop(rate.mat.gtr.4state, drop.par=c(2,3))
pp.All<- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.4state, node.states="marginal", model="ARD")
pp.pag94 <- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.pag94, node.states="marginal", model="ARD")
pp.All.Onlyvia01 <- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.All.OnlyVia01, node.states="marginal", model="ARD")
pp.pag94..Onlyvia01 <- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.pag94.OnlyVia01, node.states="marginal", model="ARD")
pp.pag94.Onlyvia01 <- rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.ard.pag94.OnlyVia01, node.states="marginal", model="ARD")
print(pp.All$AIC)
print(pp.pag94$AIC)
print(pp.All.Onlyvia01$AIC)
print(pp.pag94.Onlyvia01$AIC)
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
rate.mat.ard
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
library(ape) #utility fns
library(geiger) #utilty fns
library(OUwie)
library(fishtree)
library(dplyr)
library(tidyr)
continuous.data <- read.csv("D:/OneDrive - Pontificia Universidad Javeriana/Documents/NutritionalValuesFishes/Nutrients_EntireDataSet.csv")
tree <- fishtree_phylogeny(type="chronogram")
CleanData <- function(data, phylo) {
data$Species <- gsub(' ', '_' , continuous.data$Species)
data <- data %>%
group_by(Species) %>%
summarize(mean_Pr = mean(Pr)) %>%
drop_na()  %>%
filter(Species %in% phylo$tip.label)
trait <- as.numeric(data$mean_Pr)
names(trait) <- data$Species
datatree <- treedata(tree, trait)
return(datatree)
}
data <- CleanData(continuous.data, tree)
VisualizeData <- function(phy, data) {
phytools::contMap(phy, data)
}
#### This is how is fitted here
BM1 <- geiger::fitContinuous(data$phy, data$data, model="BM")
print(paste("The rate of evolution is", BM1$opt$sigsq, "in units of", "time"))
OU1 <- fitContinuous(data$phy, data$data, model="OU")
par(mfcol(c(1,2)))
plot(tree, show.tip.label=FALSE)
ou.tree <- rescale(tree, model="OU", OU1$opt$alpha)
plot(ou.tree)
AIC.BM1 <- AIC(BM1)
AIC.OU1 <- AIC(OU1)
delta.AIC.BM1 <- AIC.BM1 - min(AIC.BM1, AIC.OU1)
delta.AIC.OU1 <- AIC.OU1 - min(AIC.BM1, AIC.OU1)
delta.AIC.OU1
delta.AIC.BM1
as.numeric(data$data < mean(data$data))
one.discrete.char <- as.numeric(data$data < mean(data$data))
one.discrete.char
reconstruction.info <- ace(one.discrete.char, data$phy, type="discrete", method="ML", CI=TRUE)
best.states <- colnames(reconstruction.info$lik.anc)[apply(reconstruction.info$lik.anc, 1, which.max)]
best.states
data$phy
data$phy$Nnode
data$phy$Nnode
data$phy$Nnode
labeled.tree <- str(data$phy)
best.states
data$phy$node.label <- best.states
data$phy$node.label
labeled.tree <- data$phy
labeled.treenode.label <- best.states
nodeBased.OUMV <- OUwie(data$tree, data$data, model="OUMV", simmap.tree=FALSE, diagn=FALSE)
data$data
nodeBased.OUMV <- OUwie(data$tree, as.vector(data$data), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
nodeBased.OUMV <- OUwie(data$tree, clean.df(data$data), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
clean.df <- function(data, trait.name){
data.df <- as.data.frame(data)
data.df$Species <- rownames(data.df)
rownames(data.df) <- NULL
colnames(data.df) <- c(trait.name,"Species")
data.df[,trait.name] <- as.factor(data.df[, trait.name])
data.df <- data.df[,c("Species", trait.name)]
return(data.df)
}
nodeBased.OUMV <- OUwie(data$tree, clean.df(data$data), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
nodeBased.OUMV <- OUwie(data$tree, clean.df(data$data, "Protein"), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
clean.df(data$data, "Protein")
nodeBased.OUMV <- OUwie(data$tree, clean.df(data$data, "Protein"), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
data$tree
nodeBased.OUMV <- OUwie(data$phy, clean.df(data$data, "Protein"), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
labeled.tree$node.label <- best.states
nodeBased.OUMV <- OUwie(labeled.tree, clean.df(data$data, "Protein"), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
nodeBased.OUMV <- OUwie(data$phy, data$data, model="OUMV", simmap.tree=FALSE, diagn=FALSE)
nodeBased.OUMV <- OUwie(data$phy, clean.df(data$data, "Protein"), model="OUMV", simmap.tree=FALSE, diagn=FALSE)
cont.data <- data.frame(species=rownames(data$data), Reg=reg, trait=data$data[,1])
cont.data <- data.frame(species=rownames(data$data), trait=data$data[,1])
cont.data
nodeBased.OUMV <- OUwie(data$phy, cont.data, model="OUMV", simmap.tree=FALSE, diagn=FALSE)
cont.data <- data.frame(species=rownames(data$data), regime=best.states, trait=data$data[,1])
nodeBased.OUMV <- OUwie(data$phy, cont.data, model="OUMV", simmap.tree=FALSE, diagn=FALSE)
best.states
library(geiger)
library(ape)
library(corHMM)
##Continuous data
tree.primates <- read.tree(text="((((Homo:0.21,Pongo:0.21):0.28,Macaca:0.49):0.13,Ateles:0.62):0.38,Galago:1.00);") #using examples from ape ?pic
X <- c(4.09434, 3.61092, 2.37024, 2.02815, -1.46968)
Y <- c(4.74493, 3.33220, 3.36730, 2.89037, 2.30259)
names(X) <- names(Y) <- c("Homo", "Pongo", "Macaca", "Ateles", "Galago")
pic.X <- pic(X, tree.primates)
pic.Y <- pic(Y, tree.primates)
##Now, positivitize the contrasts and do a regression through the origin.
##Discrete data
data(primates)
ls()
print(primates)
require(phytools)
#Just to make this a better dataset for our exercise, I'm going to change some of the states
#(I want to have all four trait combinations present). For actual analyses, of course, DO NOT INVENT YOUR DATA.
#First, a review of discrete state models:
primates$trait[which(grepl("Hylobates",primates$trait[,1])),2]<-1
trait1<-primates$trait[,2]
names(trait1) <- primates$trait[,1]
primates$tree <- ape::multi2di(primates$tree)
plotSimmap(make.simmap(primates$tree, trait1), pts=FALSE, fsize=0.8)
rate.mat.er <- corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ER")
print(rate.mat.er)
#What does this matrix mean?
# This is a matrix of equal transition rates model for two states in one character
pp.er <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.er, node.states="marginal")
print(pp.er)
# What do these results mean?
# This are the transition rates estimates of character states from primate data
# under the assumption of the ER model.
rate.mat.ard<-rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ARD")
print(rate.mat.ard)
# And these?
# This is the matrix from an all-rates-different model assuming the the transition rate could be different.
pp.ard<-corHMM:::corHMM(primates$tree,primates$trait[,c(1,2)],rate.cat=1,rate.mat=rate.mat.ard, node.states="marginal")
print(pp.ard)
#which model is better?
#Following AIc, ARD model seems better. However the differences between both are under less than a delta AIC of 2, which can be
# considered a small difference.
pp.er$AIC
pp.ard$AIC
#Now let's look at multiple traits.
#This is a matrix with four states
rate.mat.er.4state <-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ER")
print(rate.mat.er.4state)
fourstate.trait<-rep(NA,Ntip(primates$tree))
for(i in sequence(Ntip(primates$tree))) {
if(primates$trait[i,2]==0 && primates$trait[i,3]==0) {
fourstate.trait[i]<-0
}
if(primates$trait[i,2]==0 && primates$trait[i,3]==1) {
fourstate.trait[i]<-1
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==0) {
fourstate.trait[i]<-2
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==1) {
fourstate.trait[i]<-3
}
}
fourstate.data<-data.frame(Genus_sp=primates$trait[,1], T1=fourstate.trait)
print(rayDISC(primates$tree, fourstate.data, ntraits=1, model="ER", node.states="marginal"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat=rate.mat.er.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ARD")
print(rate.mat.ard.4state)
#Now let's make the equivalent of a GTR matrix:
rate.mat.gtr.4state<-rate.mat.ard.4state
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(1,4))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(2,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(3,8))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(4,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(5,7))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(6,7))
print(rate.mat.gtr.4state)
#Now make a model like Pagel 1994
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.gtr.4state, node.states="marginal", model="ARD"))
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
rate.mat.pag94 <- corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(3,5,8,10))
ape:::Ntip(primates$tree)
ape:::Ntip(primates$tree)
ape:::Ntip(primates$tree)
ape:::Nnode(primates$tree)
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
library(geiger)
library(ape)
library(corHMM)
##Continuous data
tree.primates <- read.tree(text="((((Homo:0.21,Pongo:0.21):0.28,Macaca:0.49):0.13,Ateles:0.62):0.38,Galago:1.00);") #using examples from ape ?pic
X <- c(4.09434, 3.61092, 2.37024, 2.02815, -1.46968)
Y <- c(4.74493, 3.33220, 3.36730, 2.89037, 2.30259)
names(X) <- names(Y) <- c("Homo", "Pongo", "Macaca", "Ateles", "Galago")
pic.X <- pic(X, tree.primates)
pic.Y <- pic(Y, tree.primates)
##Now, positivitize the contrasts and do a regression through the origin.
##Discrete data
data(primates)
ls()
print(primates)
require(phytools)
#Just to make this a better dataset for our exercise, I'm going to change some of the states
#(I want to have all four trait combinations present). For actual analyses, of course, DO NOT INVENT YOUR DATA.
#First, a review of discrete state models:
primates$trait[which(grepl("Hylobates",primates$trait[,1])),2]<-1
trait1<-primates$trait[,2]
names(trait1) <- primates$trait[,1]
primates$tree <- ape::multi2di(primates$tree)
plotSimmap(make.simmap(primates$tree, trait1), pts=FALSE, fsize=0.8)
rate.mat.er <- corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ER")
print(rate.mat.er)
#What does this matrix mean?
# This is a matrix of equal transition rates model for two states in one character
pp.er <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.er, node.states="marginal")
print(pp.er)
# What do these results mean?
# This are the transition rates estimates of character states from primate data
# under the assumption of the ER model.
rate.mat.ard<-rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ARD")
print(rate.mat.ard)
# And these?
# This is the matrix from an all-rates-different model assuming the the transition rate could be different.
pp.ard<-corHMM:::corHMM(primates$tree,primates$trait[,c(1,2)],rate.cat=1,rate.mat=rate.mat.ard, node.states="marginal")
print(pp.ard)
#which model is better?
#Following AIc, ARD model seems better. However the differences between both are under less than a delta AIC of 2, which can be
# considered a small difference.
pp.er$AIC
pp.ard$AIC
#Now let's look at multiple traits.
#This is a matrix with four states
rate.mat.er.4state <-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ER")
print(rate.mat.er.4state)
fourstate.trait<-rep(NA,Ntip(primates$tree))
for(i in sequence(Ntip(primates$tree))) {
if(primates$trait[i,2]==0 && primates$trait[i,3]==0) {
fourstate.trait[i]<-0
}
if(primates$trait[i,2]==0 && primates$trait[i,3]==1) {
fourstate.trait[i]<-1
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==0) {
fourstate.trait[i]<-2
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==1) {
fourstate.trait[i]<-3
}
}
fourstate.data<-data.frame(Genus_sp=primates$trait[,1], T1=fourstate.trait)
print(rayDISC(primates$tree, fourstate.data, ntraits=1, model="ER", node.states="marginal"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat=rate.mat.er.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ARD")
print(rate.mat.ard.4state)
#Now let's make the equivalent of a GTR matrix:
rate.mat.gtr.4state<-rate.mat.ard.4state
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(1,4))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(2,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(3,8))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(4,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(5,7))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(6,7))
print(rate.mat.gtr.4state)
#Now make a model like Pagel 1994
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.gtr.4state, node.states="marginal", model="ARD"))
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
rate.mat.pag94 <- corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(3,5,8,10))
#Now that you have some introduction, there are two routes:
#Construct a model to test if state 1 can never be lost
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
rate.mat.NoOneLoss
library(geiger)
library(ape)
library(corHMM)
##Continuous data
tree.primates <- read.tree(text="((((Homo:0.21,Pongo:0.21):0.28,Macaca:0.49):0.13,Ateles:0.62):0.38,Galago:1.00);") #using examples from ape ?pic
X <- c(4.09434, 3.61092, 2.37024, 2.02815, -1.46968)
Y <- c(4.74493, 3.33220, 3.36730, 2.89037, 2.30259)
names(X) <- names(Y) <- c("Homo", "Pongo", "Macaca", "Ateles", "Galago")
pic.X <- pic(X, tree.primates)
pic.Y <- pic(Y, tree.primates)
##Now, positivitize the contrasts and do a regression through the origin.
##Discrete data
data(primates)
ls()
print(primates)
require(phytools)
#Just to make this a better dataset for our exercise, I'm going to change some of the states
#(I want to have all four trait combinations present). For actual analyses, of course, DO NOT INVENT YOUR DATA.
#First, a review of discrete state models:
primates$trait[which(grepl("Hylobates",primates$trait[,1])),2]<-1
trait1<-primates$trait[,2]
names(trait1) <- primates$trait[,1]
primates$tree <- ape::multi2di(primates$tree)
plotSimmap(make.simmap(primates$tree, trait1), pts=FALSE, fsize=0.8)
rate.mat.er <- corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ER")
print(rate.mat.er)
#What does this matrix mean?
# This is a matrix of equal transition rates model for two states in one character
pp.er <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.er, node.states="marginal")
print(pp.er)
# What do these results mean?
# This are the transition rates estimates of character states from primate data
# under the assumption of the ER model.
rate.mat.ard<-rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ARD")
print(rate.mat.ard)
# And these?
# This is the matrix from an all-rates-different model assuming the the transition rate could be different.
pp.ard<-corHMM:::corHMM(primates$tree,primates$trait[,c(1,2)],rate.cat=1,rate.mat=rate.mat.ard, node.states="marginal")
print(pp.ard)
#which model is better?
#Following AIc, ARD model seems better. However the differences between both are under less than a delta AIC of 2, which can be
# considered a small difference.
pp.er$AIC
pp.ard$AIC
#Now let's look at multiple traits.
#This is a matrix with four states
rate.mat.er.4state <-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ER")
print(rate.mat.er.4state)
fourstate.trait<-rep(NA,Ntip(primates$tree))
for(i in sequence(Ntip(primates$tree))) {
if(primates$trait[i,2]==0 && primates$trait[i,3]==0) {
fourstate.trait[i]<-0
}
if(primates$trait[i,2]==0 && primates$trait[i,3]==1) {
fourstate.trait[i]<-1
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==0) {
fourstate.trait[i]<-2
}
if(primates$trait[i,2]==1 && primates$trait[i,3]==1) {
fourstate.trait[i]<-3
}
}
fourstate.data<-data.frame(Genus_sp=primates$trait[,1], T1=fourstate.trait)
print(rayDISC(primates$tree, fourstate.data, ntraits=1, model="ER", node.states="marginal"))
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat=rate.mat.er.4state, node.states="marginal", model="ARD"))
rate.mat.ard.4state<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=4, model="ARD")
print(rate.mat.ard.4state)
#Now let's make the equivalent of a GTR matrix:
rate.mat.gtr.4state<-rate.mat.ard.4state
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(1,4))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(2,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(3,8))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(4,6))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(5,7))
rate.mat.gtr.4state<-corHMM:::rate.par.eq(rate.mat.gtr.4state, c(6,7))
print(rate.mat.gtr.4state)
#Now make a model like Pagel 1994
print(rayDISC(primates$tree, fourstate.data, ntraits=1, rate.mat= rate.mat.gtr.4state, node.states="marginal", model="ARD"))
print(corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=2, nstates=2, model="ARD"))
rate.mat.pag94 <- corHMM:::rate.par.drop(rate.mat.ard.4state, drop.par=c(3,5,8,10))
#Now that you have some introduction, there are two routes:
#Construct a model to test if state 1 can never be lost
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
rate.mat.ard<-corHMM:::rate.mat.maker(rate.cat=1, hrm=FALSE, ntraits=1, nstates=2, model="ARD")
print(rate.mat.ard)
rate.mat.NoOneLoss <- corHMM:::rate.par.drop(rate.mat.ard, drop.par=1) # Set 2 (1) to 1(0) transition to NA
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
rate.mat.NoOneLoss
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
primates$tree,primates$trait[,c(1,2)]
primates$tree,primates$trait[,c(1,2)]
primates$tree,primates$trait[,1],
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,1], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
primates$trait[,1]
primates$trait[,2]
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,2], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLoss, node.states="marginal")
source('~/UTK/Spring2021/PhylogeneticMethods/Exercises/TraitCorrelation/TraitCorrelation.R', echo=TRUE)
pp.NoOneLoss <- corHMM(primates$tree,primates$trait[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLossNoNA, node.states="marginal")
table(primates$trait)
str(primates$trait)
primates$trait2 <- primates$trait
primates$trait2[,2] <- primates$trait2[,2] + 1
pp.NoOneLoss <- corHMM(primates$tree,primates$trait2[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLossNoNA, node.states="marginal")
traceback()
?corHMM
pp.NoOneLoss <- corHMM(primates$tree,primates$trait2[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLossNoNA, node.states="none")
pp.NoOneLoss
pp.NoOneLoss <- corHMM(primates$tree,primates$trait2[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLossNoNA, node.states="none", root.p=c(1,0))
pp.NoOneLoss
pp.NoOneLoss <- corHMM(primates$tree,primates$trait2[,c(1,2)], rate.cat=1, rate.mat=rate.mat.NoOneLossNoNA, node.states="none", root.p=c(0,1))
pp.NoOneLoss
